<?php

// This file has been auto-generated by the Symfony Cache Component.

return [[

'App__Entity__Article__CLASSMETADATA__' => 0,
'App__Entity__Newz__CLASSMETADATA__' => 1,
'App__Entity__User__CLASSMETADATA__' => 2,
'App__Entity__Cotisation__CLASSMETADATA__' => 3,
'App__Entity__AboutUs__CLASSMETADATA__' => 4,
'App__Entity__Action__CLASSMETADATA__' => 5,
'App__Entity__Contact__CLASSMETADATA__' => 6,
'App__Entity__Facture__CLASSMETADATA__' => 7,
'App__Entity__MailData__CLASSMETADATA__' => 8,
'App__Entity__Subscriber__CLASSMETADATA__' => 9,
'App__Entity__Abonnement__CLASSMETADATA__' => 10,
'App__Entity__Unsubscriber__CLASSMETADATA__' => 11,
'App__Entity__Donation__CLASSMETADATA__' => 12,
'App__Entity__Plan__CLASSMETADATA__' => 13,

], [

0 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Mapping\\FieldMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\FieldMapping')),
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Article',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\ArticleRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => $o[1],
                        'titre' => $o[2],
                        'contenu' => $o[3],
                        'image' => $o[4],
                        'auteur' => $o[5],
                        'date' => $o[6],
                        'description' => $o[7],
                        'image1' => $o[8],
                        'image2' => $o[9],
                        'image3' => $o[10],
                        'sousTitre1' => $o[11],
                        'sousTitre2' => $o[12],
                        'sousTitre3' => $o[13],
                        'sousTitre4' => $o[14],
                        'sousTitre5' => $o[15],
                        'paragraphe1' => $o[16],
                        'paragraphe2' => $o[17],
                        'paragraphe3' => $o[18],
                        'paragraphe4' => $o[19],
                        'paragraphe5' => $o[20],
                        'paragraphe6' => $o[21],
                        'paragraphe7' => $o[22],
                        'paragraphe8' => $o[23],
                        'paragraphe9' => $o[24],
                        'paragraphe10' => $o[25],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'titre' => 'titre',
                        'contenu' => 'contenu',
                        'image' => 'image',
                        'auteur' => 'auteur',
                        'date' => 'date',
                        'description' => 'description',
                        'image1' => 'image1',
                        'image2' => 'image2',
                        'image3' => 'image3',
                        'sous_titre1' => 'sousTitre1',
                        'sous_titre2' => 'sousTitre2',
                        'sous_titre3' => 'sousTitre3',
                        'sous_titre4' => 'sousTitre4',
                        'sous_titre5' => 'sousTitre5',
                        'paragraphe1' => 'paragraphe1',
                        'paragraphe2' => 'paragraphe2',
                        'paragraphe3' => 'paragraphe3',
                        'paragraphe4' => 'paragraphe4',
                        'paragraphe5' => 'paragraphe5',
                        'paragraphe6' => 'paragraphe6',
                        'paragraphe7' => 'paragraphe7',
                        'paragraphe8' => 'paragraphe8',
                        'paragraphe9' => 'paragraphe9',
                        'paragraphe10' => 'paragraphe10',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'titre' => 'titre',
                        'contenu' => 'contenu',
                        'image' => 'image',
                        'auteur' => 'auteur',
                        'date' => 'date',
                        'description' => 'description',
                        'image1' => 'image1',
                        'image2' => 'image2',
                        'image3' => 'image3',
                        'sousTitre1' => 'sous_titre1',
                        'sousTitre2' => 'sous_titre2',
                        'sousTitre3' => 'sous_titre3',
                        'sousTitre4' => 'sous_titre4',
                        'sousTitre5' => 'sous_titre5',
                        'paragraphe1' => 'paragraphe1',
                        'paragraphe2' => 'paragraphe2',
                        'paragraphe3' => 'paragraphe3',
                        'paragraphe4' => 'paragraphe4',
                        'paragraphe5' => 'paragraphe5',
                        'paragraphe6' => 'paragraphe6',
                        'paragraphe7' => 'paragraphe7',
                        'paragraphe8' => 'paragraphe8',
                        'paragraphe9' => 'paragraphe9',
                        'paragraphe10' => 'paragraphe10',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'article',
                    ],
                ],
                'idGenerator' => [
                    $o[26],
                ],
                'name' => [
                    'App\\Entity\\Article',
                ],
                'id' => [
                    1 => true,
                ],
                'type' => [
                    1 => 'integer',
                    'string',
                    'text',
                    'string',
                    'string',
                    'date',
                    'text',
                    'string',
                    'string',
                    'string',
                    'string',
                    'string',
                    'string',
                    'string',
                    'string',
                    'text',
                    'text',
                    'text',
                    'text',
                    'text',
                    'text',
                    'text',
                    'text',
                    'text',
                    'text',
                ],
                'fieldName' => [
                    1 => 'id',
                    'titre',
                    'contenu',
                    'image',
                    'auteur',
                    'date',
                    'description',
                    'image1',
                    'image2',
                    'image3',
                    'sousTitre1',
                    'sousTitre2',
                    'sousTitre3',
                    'sousTitre4',
                    'sousTitre5',
                    'paragraphe1',
                    'paragraphe2',
                    'paragraphe3',
                    'paragraphe4',
                    'paragraphe5',
                    'paragraphe6',
                    'paragraphe7',
                    'paragraphe8',
                    'paragraphe9',
                    'paragraphe10',
                ],
                'columnName' => [
                    1 => 'id',
                    'titre',
                    'contenu',
                    'image',
                    'auteur',
                    'date',
                    'description',
                    'image1',
                    'image2',
                    'image3',
                    'sous_titre1',
                    'sous_titre2',
                    'sous_titre3',
                    'sous_titre4',
                    'sous_titre5',
                    'paragraphe1',
                    'paragraphe2',
                    'paragraphe3',
                    'paragraphe4',
                    'paragraphe5',
                    'paragraphe6',
                    'paragraphe7',
                    'paragraphe8',
                    'paragraphe9',
                    'paragraphe10',
                ],
                'length' => [
                    2 => 255,
                    4 => 255,
                    255,
                    8 => 255,
                    255,
                    255,
                    255,
                    255,
                    255,
                    255,
                    255,
                ],
                'nullable' => [
                    6 => true,
                    8 => true,
                    true,
                    true,
                    true,
                    true,
                    true,
                    true,
                    true,
                    true,
                    true,
                    true,
                    true,
                    true,
                    true,
                    true,
                    true,
                    true,
                    true,
                ],
            ],
        ],
        $o[0],
        []
    );
},
1 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Mapping\\FieldMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\FieldMapping')),
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Newz',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\NewzRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => $o[1],
                        'type' => $o[2],
                        'titre' => $o[3],
                        'contenu' => $o[4],
                        'image' => $o[5],
                        'auteur' => $o[6],
                        'date' => $o[7],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'type' => 'type',
                        'titre' => 'titre',
                        'contenu' => 'contenu',
                        'image' => 'image',
                        'auteur' => 'auteur',
                        'date' => 'date',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'type' => 'type',
                        'titre' => 'titre',
                        'contenu' => 'contenu',
                        'image' => 'image',
                        'auteur' => 'auteur',
                        'date' => 'date',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'newz',
                    ],
                ],
                'idGenerator' => [
                    $o[8],
                ],
                'name' => [
                    'App\\Entity\\Newz',
                ],
                'id' => [
                    1 => true,
                ],
                'type' => [
                    1 => 'integer',
                    'string',
                    'string',
                    'text',
                    'string',
                    'string',
                    'date',
                ],
                'fieldName' => [
                    1 => 'id',
                    'type',
                    'titre',
                    'contenu',
                    'image',
                    'auteur',
                    'date',
                ],
                'columnName' => [
                    1 => 'id',
                    'type',
                    'titre',
                    'contenu',
                    'image',
                    'auteur',
                    'date',
                ],
                'length' => [
                    2 => 255,
                    255,
                    5 => 255,
                    255,
                ],
                'nullable' => [
                    2 => true,
                    true,
                    5 => true,
                    true,
                ],
            ],
        ],
        $o[0],
        []
    );
},
2 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Mapping\\FieldMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\FieldMapping')),
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone ($p['Doctrine\\ORM\\Mapping\\ManyToOneAssociationMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOneAssociationMapping')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumnMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumnMapping')),
            clone ($p['Doctrine\\ORM\\Mapping\\OneToManyAssociationMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\OneToManyAssociationMapping')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\User',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\UserRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => $o[1],
                        'nom' => $o[2],
                        'prenom' => $o[3],
                        'email' => $o[4],
                        'password' => $o[5],
                        'role' => $o[6],
                        'civilite' => $o[7],
                        'type' => $o[8],
                        'siren' => $o[9],
                        'formeJuridique' => $o[10],
                        'telephone' => $o[11],
                        'adresse' => $o[12],
                        'complementAdresse' => $o[13],
                        'codePostal' => $o[14],
                        'ville' => $o[15],
                        'pays' => $o[16],
                        'resetPasswordToken' => $o[17],
                        'status' => $o[18],
                        'adhesionPaye' => $o[19],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'nom' => 'nom',
                        'prenom' => 'prenom',
                        'email' => 'email',
                        'password' => 'password',
                        'role' => 'role',
                        'civilite' => 'civilite',
                        'type' => 'type',
                        'siren' => 'siren',
                        'forme_juridique' => 'formeJuridique',
                        'telephone' => 'telephone',
                        'adresse' => 'adresse',
                        'complement_adresse' => 'complementAdresse',
                        'code_postal' => 'codePostal',
                        'ville' => 'ville',
                        'pays' => 'pays',
                        'reset_password_token' => 'resetPasswordToken',
                        'status' => 'status',
                        'adhesion_paye' => 'adhesionPaye',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'nom' => 'nom',
                        'prenom' => 'prenom',
                        'email' => 'email',
                        'password' => 'password',
                        'role' => 'role',
                        'civilite' => 'civilite',
                        'type' => 'type',
                        'siren' => 'siren',
                        'formeJuridique' => 'forme_juridique',
                        'telephone' => 'telephone',
                        'adresse' => 'adresse',
                        'complementAdresse' => 'complement_adresse',
                        'codePostal' => 'code_postal',
                        'ville' => 'ville',
                        'pays' => 'pays',
                        'resetPasswordToken' => 'reset_password_token',
                        'status' => 'status',
                        'adhesionPaye' => 'adhesion_paye',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'user',
                    ],
                ],
                'associationMappings' => [
                    [
                        'plan' => $o[20],
                        'abonnements' => $o[22],
                    ],
                ],
                'idGenerator' => [
                    $o[23],
                ],
                'name' => [
                    'App\\Entity\\User',
                    21 => 'plan_id',
                ],
                'id' => [
                    1 => true,
                ],
                'type' => [
                    1 => 'integer',
                    'string',
                    'string',
                    'string',
                    'string',
                    'json',
                    'string',
                    'string',
                    'string',
                    'string',
                    'string',
                    'string',
                    'string',
                    'string',
                    'string',
                    'string',
                    'string',
                    'boolean',
                    'boolean',
                ],
                'fieldName' => [
                    1 => 'id',
                    'nom',
                    'prenom',
                    'email',
                    'password',
                    'role',
                    'civilite',
                    'type',
                    'siren',
                    'formeJuridique',
                    'telephone',
                    'adresse',
                    'complementAdresse',
                    'codePostal',
                    'ville',
                    'pays',
                    'resetPasswordToken',
                    'status',
                    'adhesionPaye',
                ],
                'columnName' => [
                    1 => 'id',
                    'nom',
                    'prenom',
                    'email',
                    'password',
                    'role',
                    'civilite',
                    'type',
                    'siren',
                    'forme_juridique',
                    'telephone',
                    'adresse',
                    'complement_adresse',
                    'code_postal',
                    'ville',
                    'pays',
                    'reset_password_token',
                    'status',
                    'adhesion_paye',
                ],
                'length' => [
                    2 => 255,
                    255,
                    255,
                    255,
                    7 => 255,
                    255,
                    255,
                    255,
                    255,
                    255,
                    255,
                    10,
                    255,
                    255,
                    255,
                ],
                'nullable' => [
                    3 => true,
                    7 => true,
                    9 => true,
                    true,
                    true,
                    13 => true,
                    17 => true,
                    true,
                    21 => false,
                ],
                'fetch' => [
                    20 => 2,
                    22 => 2,
                ],
                'sourceEntity' => [
                    20 => 'App\\Entity\\User',
                    22 => 'App\\Entity\\User',
                ],
                'sourceToTargetKeyColumns' => [
                    20 => [
                        'plan_id' => 'id',
                    ],
                ],
                'targetToSourceKeyColumns' => [
                    20 => [
                        'id' => 'plan_id',
                    ],
                ],
                'joinColumns' => [
                    20 => [
                        $o[21],
                    ],
                ],
                'joinColumnFieldNames' => [
                    20 => [
                        'plan_id' => 'plan_id',
                    ],
                ],
                'unique' => [
                    21 => false,
                ],
                'referencedColumnName' => [
                    21 => 'id',
                ],
                'cascade' => [
                    22 => [
                        'remove',
                    ],
                ],
                'orphanRemoval' => [
                    22 => true,
                ],
                'mappedBy' => [
                    22 => 'user',
                ],
            ],
            'Doctrine\\ORM\\Mapping\\AssociationMapping' => [
                'fieldName' => [
                    20 => 'plan',
                    22 => 'abonnements',
                ],
                'targetEntity' => [
                    20 => 'App\\Entity\\Plan',
                    22 => 'App\\Entity\\Abonnement',
                ],
            ],
        ],
        $o[0],
        []
    );
},
3 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Mapping\\FieldMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\FieldMapping')),
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Cotisation',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\CotisationRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => $o[1],
                        'nom' => $o[2],
                        'slug' => $o[3],
                        'stripeId' => $o[4],
                        'createdAt' => $o[5],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'nom' => 'nom',
                        'slug' => 'slug',
                        'stripe_id' => 'stripeId',
                        'created_at' => 'createdAt',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'nom' => 'nom',
                        'slug' => 'slug',
                        'stripeId' => 'stripe_id',
                        'createdAt' => 'created_at',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'cotisation',
                    ],
                ],
                'idGenerator' => [
                    $o[6],
                ],
                'name' => [
                    'App\\Entity\\Cotisation',
                ],
                'id' => [
                    1 => true,
                ],
                'type' => [
                    1 => 'integer',
                    'string',
                    'string',
                    'string',
                    'datetime_immutable',
                ],
                'fieldName' => [
                    1 => 'id',
                    'nom',
                    'slug',
                    'stripeId',
                    'createdAt',
                ],
                'columnName' => [
                    1 => 'id',
                    'nom',
                    'slug',
                    'stripe_id',
                    'created_at',
                ],
                'length' => [
                    2 => 255,
                    255,
                    255,
                ],
            ],
        ],
        $o[0],
        []
    );
},
4 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Mapping\\FieldMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\FieldMapping')),
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\AboutUs',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\AboutUsRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => $o[1],
                        'titre' => $o[2],
                        'contenu' => $o[3],
                        'image' => $o[4],
                        'auteur' => $o[5],
                        'type' => $o[6],
                        'date' => $o[7],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'titre' => 'titre',
                        'contenu' => 'contenu',
                        'image' => 'image',
                        'auteur' => 'auteur',
                        'type' => 'type',
                        'date' => 'date',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'titre' => 'titre',
                        'contenu' => 'contenu',
                        'image' => 'image',
                        'auteur' => 'auteur',
                        'type' => 'type',
                        'date' => 'date',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'about_us',
                    ],
                ],
                'idGenerator' => [
                    $o[8],
                ],
                'name' => [
                    'App\\Entity\\AboutUs',
                ],
                'id' => [
                    1 => true,
                ],
                'type' => [
                    1 => 'integer',
                    'string',
                    'text',
                    'string',
                    'string',
                    'string',
                    'date',
                ],
                'fieldName' => [
                    1 => 'id',
                    'titre',
                    'contenu',
                    'image',
                    'auteur',
                    'type',
                    'date',
                ],
                'columnName' => [
                    1 => 'id',
                    'titre',
                    'contenu',
                    'image',
                    'auteur',
                    'type',
                    'date',
                ],
                'length' => [
                    2 => 255,
                    4 => 255,
                    255,
                    255,
                ],
                'nullable' => [
                    7 => true,
                ],
            ],
        ],
        $o[0],
        []
    );
},
5 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Mapping\\FieldMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\FieldMapping')),
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Action',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\ActionRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => $o[1],
                        'titre' => $o[2],
                        'description' => $o[3],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'titre' => 'titre',
                        'description' => 'description',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'titre' => 'titre',
                        'description' => 'description',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'action',
                    ],
                ],
                'idGenerator' => [
                    $o[4],
                ],
                'name' => [
                    'App\\Entity\\Action',
                ],
                'id' => [
                    1 => true,
                ],
                'type' => [
                    1 => 'integer',
                    'string',
                    'text',
                ],
                'fieldName' => [
                    1 => 'id',
                    'titre',
                    'description',
                ],
                'columnName' => [
                    1 => 'id',
                    'titre',
                    'description',
                ],
                'length' => [
                    2 => 255,
                ],
            ],
        ],
        $o[0],
        []
    );
},
6 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Mapping\\FieldMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\FieldMapping')),
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Contact',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\ContactRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => $o[1],
                        'nom' => $o[2],
                        'prenom' => $o[3],
                        'email' => $o[4],
                        'sujet' => $o[5],
                        'message' => $o[6],
                        'createdAt' => $o[7],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'nom' => 'nom',
                        'prenom' => 'prenom',
                        'email' => 'email',
                        'sujet' => 'sujet',
                        'message' => 'message',
                        'created_at' => 'createdAt',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'nom' => 'nom',
                        'prenom' => 'prenom',
                        'email' => 'email',
                        'sujet' => 'sujet',
                        'message' => 'message',
                        'createdAt' => 'created_at',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'contact',
                    ],
                ],
                'idGenerator' => [
                    $o[8],
                ],
                'name' => [
                    'App\\Entity\\Contact',
                ],
                'id' => [
                    1 => true,
                ],
                'type' => [
                    1 => 'integer',
                    'string',
                    'string',
                    'string',
                    'string',
                    'text',
                    'datetime_immutable',
                ],
                'fieldName' => [
                    1 => 'id',
                    'nom',
                    'prenom',
                    'email',
                    'sujet',
                    'message',
                    'createdAt',
                ],
                'columnName' => [
                    1 => 'id',
                    'nom',
                    'prenom',
                    'email',
                    'sujet',
                    'message',
                    'created_at',
                ],
                'length' => [
                    2 => 255,
                    255,
                    255,
                    100,
                ],
                'nullable' => [
                    5 => true,
                ],
            ],
        ],
        $o[0],
        []
    );
},
7 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Mapping\\FieldMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\FieldMapping')),
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone ($p['Doctrine\\ORM\\Mapping\\OneToOneOwningSideMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\OneToOneOwningSideMapping')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumnMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumnMapping')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Facture',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\FactureRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => $o[1],
                        'stripeId' => $o[2],
                        'montantPaye' => $o[3],
                        'noFacture' => $o[4],
                        'hostedUrlFacture' => $o[5],
                        'createdAt' => $o[6],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'stripe_id' => 'stripeId',
                        'montant_paye' => 'montantPaye',
                        'no_facture' => 'noFacture',
                        'hosted_url_facture' => 'hostedUrlFacture',
                        'created_at' => 'createdAt',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'stripeId' => 'stripe_id',
                        'montantPaye' => 'montant_paye',
                        'noFacture' => 'no_facture',
                        'hostedUrlFacture' => 'hosted_url_facture',
                        'createdAt' => 'created_at',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'facture',
                    ],
                ],
                'associationMappings' => [
                    [
                        'abonnement' => $o[7],
                    ],
                ],
                'idGenerator' => [
                    $o[9],
                ],
                'name' => [
                    'App\\Entity\\Facture',
                    8 => 'abonnement_id',
                ],
                'id' => [
                    1 => true,
                ],
                'type' => [
                    1 => 'integer',
                    'string',
                    'float',
                    'string',
                    'string',
                    'datetime_immutable',
                ],
                'fieldName' => [
                    1 => 'id',
                    'stripeId',
                    'montantPaye',
                    'noFacture',
                    'hostedUrlFacture',
                    'createdAt',
                ],
                'columnName' => [
                    1 => 'id',
                    'stripe_id',
                    'montant_paye',
                    'no_facture',
                    'hosted_url_facture',
                    'created_at',
                ],
                'length' => [
                    2 => 255,
                    4 => 255,
                    255,
                ],
                'fetch' => [
                    7 => 2,
                ],
                'sourceEntity' => [
                    7 => 'App\\Entity\\Facture',
                ],
                'inversedBy' => [
                    7 => 'facture',
                ],
                'sourceToTargetKeyColumns' => [
                    7 => [
                        'abonnement_id' => 'id',
                    ],
                ],
                'targetToSourceKeyColumns' => [
                    7 => [
                        'id' => 'abonnement_id',
                    ],
                ],
                'joinColumns' => [
                    7 => [
                        $o[8],
                    ],
                ],
                'joinColumnFieldNames' => [
                    7 => [
                        'abonnement_id' => 'abonnement_id',
                    ],
                ],
                'unique' => [
                    8 => true,
                ],
                'nullable' => [
                    8 => false,
                ],
                'referencedColumnName' => [
                    8 => 'id',
                ],
            ],
            'Doctrine\\ORM\\Mapping\\AssociationMapping' => [
                'fieldName' => [
                    7 => 'abonnement',
                ],
                'targetEntity' => [
                    7 => 'App\\Entity\\Abonnement',
                ],
            ],
        ],
        $o[0],
        []
    );
},
8 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Mapping\\FieldMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\FieldMapping')),
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\MailData',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\MailDataRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => $o[1],
                        'choice' => $o[2],
                        'subject' => $o[3],
                        'body' => $o[4],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'choice' => 'choice',
                        'subject' => 'subject',
                        'body' => 'body',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'choice' => 'choice',
                        'subject' => 'subject',
                        'body' => 'body',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'mail_data',
                    ],
                ],
                'idGenerator' => [
                    $o[5],
                ],
                'name' => [
                    'App\\Entity\\MailData',
                ],
                'id' => [
                    1 => true,
                ],
                'type' => [
                    1 => 'integer',
                    'string',
                    'string',
                    'string',
                ],
                'fieldName' => [
                    1 => 'id',
                    'choice',
                    'subject',
                    'body',
                ],
                'columnName' => [
                    1 => 'id',
                    'choice',
                    'subject',
                    'body',
                ],
                'length' => [
                    2 => 255,
                    255,
                    255,
                ],
            ],
        ],
        $o[0],
        []
    );
},
9 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Mapping\\FieldMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\FieldMapping')),
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Subscriber',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\SubscriberRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => $o[1],
                        'firstName' => $o[2],
                        'lastName' => $o[3],
                        'email' => $o[4],
                        'isConfirmed' => $o[5],
                        'subscribedAt' => $o[6],
                        'unsubscribeToken' => $o[7],
                        'confirmationToken' => $o[8],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'first_name' => 'firstName',
                        'last_name' => 'lastName',
                        'email' => 'email',
                        'is_confirmed' => 'isConfirmed',
                        'subscribed_at' => 'subscribedAt',
                        'unsubscribe_token' => 'unsubscribeToken',
                        'confirmation_token' => 'confirmationToken',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'firstName' => 'first_name',
                        'lastName' => 'last_name',
                        'email' => 'email',
                        'isConfirmed' => 'is_confirmed',
                        'subscribedAt' => 'subscribed_at',
                        'unsubscribeToken' => 'unsubscribe_token',
                        'confirmationToken' => 'confirmation_token',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'subscriber',
                    ],
                ],
                'idGenerator' => [
                    $o[9],
                ],
                'name' => [
                    'App\\Entity\\Subscriber',
                ],
                'id' => [
                    1 => true,
                ],
                'type' => [
                    1 => 'integer',
                    'string',
                    'string',
                    'string',
                    'boolean',
                    'datetime',
                    'string',
                    'string',
                ],
                'fieldName' => [
                    1 => 'id',
                    'firstName',
                    'lastName',
                    'email',
                    'isConfirmed',
                    'subscribedAt',
                    'unsubscribeToken',
                    'confirmationToken',
                ],
                'columnName' => [
                    1 => 'id',
                    'first_name',
                    'last_name',
                    'email',
                    'is_confirmed',
                    'subscribed_at',
                    'unsubscribe_token',
                    'confirmation_token',
                ],
                'length' => [
                    2 => 255,
                    255,
                    255,
                    7 => 255,
                    255,
                ],
                'unique' => [
                    4 => true,
                ],
                'nullable' => [
                    6 => true,
                    true,
                    true,
                ],
            ],
        ],
        $o[0],
        []
    );
},
10 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Mapping\\FieldMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\FieldMapping')),
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone ($p['Doctrine\\ORM\\Mapping\\OneToOneInverseSideMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\OneToOneInverseSideMapping')),
            clone ($p['Doctrine\\ORM\\Mapping\\ManyToOneAssociationMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ManyToOneAssociationMapping')),
            clone ($p['Doctrine\\ORM\\Mapping\\JoinColumnMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\JoinColumnMapping')),
            clone $p['Doctrine\\ORM\\Mapping\\ManyToOneAssociationMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\JoinColumnMapping'],
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Abonnement',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\AbonnementRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => $o[1],
                        'stripeId' => $o[2],
                        'currentPeriodStart' => $o[3],
                        'currentPeriodEnd' => $o[4],
                        'isActive' => $o[5],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'stripe_id' => 'stripeId',
                        'current_period_start' => 'currentPeriodStart',
                        'current_period_end' => 'currentPeriodEnd',
                        'is_active' => 'isActive',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'stripeId' => 'stripe_id',
                        'currentPeriodStart' => 'current_period_start',
                        'currentPeriodEnd' => 'current_period_end',
                        'isActive' => 'is_active',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'abonnement',
                    ],
                ],
                'associationMappings' => [
                    [
                        'facture' => $o[6],
                        'plan' => $o[7],
                        'user' => $o[9],
                    ],
                ],
                'idGenerator' => [
                    $o[11],
                ],
                'name' => [
                    'App\\Entity\\Abonnement',
                    8 => 'plan_id',
                    10 => 'user_id',
                ],
                'id' => [
                    1 => true,
                ],
                'type' => [
                    1 => 'integer',
                    'string',
                    'datetime',
                    'datetime',
                    'boolean',
                ],
                'fieldName' => [
                    1 => 'id',
                    'stripeId',
                    'currentPeriodStart',
                    'currentPeriodEnd',
                    'isActive',
                ],
                'columnName' => [
                    1 => 'id',
                    'stripe_id',
                    'current_period_start',
                    'current_period_end',
                    'is_active',
                ],
                'length' => [
                    2 => 255,
                ],
                'cascade' => [
                    6 => [
                        'persist',
                        'remove',
                    ],
                ],
                'fetch' => [
                    6 => 2,
                    2,
                    9 => 2,
                ],
                'sourceEntity' => [
                    6 => 'App\\Entity\\Abonnement',
                    'App\\Entity\\Abonnement',
                    9 => 'App\\Entity\\Abonnement',
                ],
                'mappedBy' => [
                    6 => 'abonnement',
                ],
                'inversedBy' => [
                    7 => 'abonnements',
                    9 => 'abonnements',
                ],
                'sourceToTargetKeyColumns' => [
                    7 => [
                        'plan_id' => 'id',
                    ],
                    9 => [
                        'user_id' => 'id',
                    ],
                ],
                'targetToSourceKeyColumns' => [
                    7 => [
                        'id' => 'plan_id',
                    ],
                    9 => [
                        'id' => 'user_id',
                    ],
                ],
                'joinColumns' => [
                    7 => [
                        $o[8],
                    ],
                    9 => [
                        $o[10],
                    ],
                ],
                'joinColumnFieldNames' => [
                    7 => [
                        'plan_id' => 'plan_id',
                    ],
                    9 => [
                        'user_id' => 'user_id',
                    ],
                ],
                'unique' => [
                    8 => false,
                    10 => false,
                ],
                'nullable' => [
                    8 => false,
                    10 => false,
                ],
                'referencedColumnName' => [
                    8 => 'id',
                    10 => 'id',
                ],
            ],
            'Doctrine\\ORM\\Mapping\\AssociationMapping' => [
                'fieldName' => [
                    6 => 'facture',
                    'plan',
                    9 => 'user',
                ],
                'targetEntity' => [
                    6 => 'App\\Entity\\Facture',
                    'App\\Entity\\Plan',
                    9 => 'App\\Entity\\User',
                ],
            ],
        ],
        $o[0],
        []
    );
},
11 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Mapping\\FieldMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\FieldMapping')),
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Unsubscriber',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\UnsubscriberRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => $o[1],
                        'firstName' => $o[2],
                        'lastName' => $o[3],
                        'email' => $o[4],
                        'subscribedAt' => $o[5],
                        'unsubscribedAt' => $o[6],
                        'unsubscribeReason' => $o[7],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'first_name' => 'firstName',
                        'last_name' => 'lastName',
                        'email' => 'email',
                        'subscribed_at' => 'subscribedAt',
                        'unsubscribed_at' => 'unsubscribedAt',
                        'unsubscribe_reason' => 'unsubscribeReason',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'firstName' => 'first_name',
                        'lastName' => 'last_name',
                        'email' => 'email',
                        'subscribedAt' => 'subscribed_at',
                        'unsubscribedAt' => 'unsubscribed_at',
                        'unsubscribeReason' => 'unsubscribe_reason',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'unsubscriber',
                    ],
                ],
                'idGenerator' => [
                    $o[8],
                ],
                'name' => [
                    'App\\Entity\\Unsubscriber',
                ],
                'id' => [
                    1 => true,
                ],
                'type' => [
                    1 => 'integer',
                    'string',
                    'string',
                    'string',
                    'datetime',
                    'datetime',
                    'string',
                ],
                'fieldName' => [
                    1 => 'id',
                    'firstName',
                    'lastName',
                    'email',
                    'subscribedAt',
                    'unsubscribedAt',
                    'unsubscribeReason',
                ],
                'columnName' => [
                    1 => 'id',
                    'first_name',
                    'last_name',
                    'email',
                    'subscribed_at',
                    'unsubscribed_at',
                    'unsubscribe_reason',
                ],
                'length' => [
                    2 => 255,
                    255,
                    255,
                    7 => 255,
                ],
                'unique' => [
                    4 => true,
                ],
                'nullable' => [
                    5 => true,
                    true,
                    true,
                ],
            ],
        ],
        $o[0],
        []
    );
},
12 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Mapping\\FieldMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\FieldMapping')),
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Donation',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\DonationRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => $o[1],
                        'Civilite' => $o[2],
                        'Nom' => $o[3],
                        'Prenom' => $o[4],
                        'Email' => $o[5],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'civilite' => 'Civilite',
                        'nom' => 'Nom',
                        'prenom' => 'Prenom',
                        'email' => 'Email',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'Civilite' => 'civilite',
                        'Nom' => 'nom',
                        'Prenom' => 'prenom',
                        'Email' => 'email',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'donation',
                    ],
                ],
                'idGenerator' => [
                    $o[6],
                ],
                'name' => [
                    'App\\Entity\\Donation',
                ],
                'id' => [
                    1 => true,
                ],
                'type' => [
                    1 => 'integer',
                    'string',
                    'string',
                    'string',
                    'string',
                ],
                'fieldName' => [
                    1 => 'id',
                    'Civilite',
                    'Nom',
                    'Prenom',
                    'Email',
                ],
                'columnName' => [
                    1 => 'id',
                    'civilite',
                    'nom',
                    'prenom',
                    'email',
                ],
                'length' => [
                    2 => 255,
                    255,
                    255,
                    255,
                ],
            ],
        ],
        $o[0],
        []
    );
},
13 => static function () {
    return \Symfony\Component\VarExporter\Internal\Hydrator::hydrate(
        $o = [
            clone (($p = &\Symfony\Component\VarExporter\Internal\Registry::$prototypes)['Doctrine\\ORM\\Mapping\\ClassMetadata'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\ClassMetadata')),
            clone ($p['Doctrine\\ORM\\Mapping\\FieldMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\FieldMapping')),
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone $p['Doctrine\\ORM\\Mapping\\FieldMapping'],
            clone ($p['Doctrine\\ORM\\Mapping\\OneToManyAssociationMapping'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Mapping\\OneToManyAssociationMapping')),
            clone ($p['Doctrine\\ORM\\Id\\IdentityGenerator'] ?? \Symfony\Component\VarExporter\Internal\Registry::p('Doctrine\\ORM\\Id\\IdentityGenerator')),
        ],
        null,
        [
            'stdClass' => [
                'namespace' => [
                    'App\\Entity',
                ],
                'rootEntityName' => [
                    'App\\Entity\\Plan',
                ],
                'customRepositoryClassName' => [
                    'App\\Repository\\PlanRepository',
                ],
                'identifier' => [
                    [
                        'id',
                    ],
                ],
                'generatorType' => [
                    4,
                ],
                'fieldMappings' => [
                    [
                        'id' => $o[1],
                        'nom' => $o[2],
                        'slug' => $o[3],
                        'stripeId' => $o[4],
                        'createdAt' => $o[5],
                    ],
                ],
                'fieldNames' => [
                    [
                        'id' => 'id',
                        'nom' => 'nom',
                        'slug' => 'slug',
                        'stripe_id' => 'stripeId',
                        'created_at' => 'createdAt',
                    ],
                ],
                'columnNames' => [
                    [
                        'id' => 'id',
                        'nom' => 'nom',
                        'slug' => 'slug',
                        'stripeId' => 'stripe_id',
                        'createdAt' => 'created_at',
                    ],
                ],
                'table' => [
                    [
                        'name' => 'plan',
                    ],
                ],
                'associationMappings' => [
                    [
                        'abonnements' => $o[6],
                    ],
                ],
                'idGenerator' => [
                    $o[7],
                ],
                'name' => [
                    'App\\Entity\\Plan',
                ],
                'id' => [
                    1 => true,
                ],
                'type' => [
                    1 => 'integer',
                    'string',
                    'string',
                    'string',
                    'datetime_immutable',
                ],
                'fieldName' => [
                    1 => 'id',
                    'nom',
                    'slug',
                    'stripeId',
                    'createdAt',
                ],
                'columnName' => [
                    1 => 'id',
                    'nom',
                    'slug',
                    'stripe_id',
                    'created_at',
                ],
                'length' => [
                    2 => 255,
                    255,
                    255,
                ],
                'cascade' => [
                    6 => [
                        'remove',
                    ],
                ],
                'fetch' => [
                    6 => 2,
                ],
                'orphanRemoval' => [
                    6 => true,
                ],
                'sourceEntity' => [
                    6 => 'App\\Entity\\Plan',
                ],
                'mappedBy' => [
                    6 => 'plan',
                ],
            ],
            'Doctrine\\ORM\\Mapping\\AssociationMapping' => [
                'fieldName' => [
                    6 => 'abonnements',
                ],
                'targetEntity' => [
                    6 => 'App\\Entity\\Abonnement',
                ],
            ],
        ],
        $o[0],
        []
    );
},

]];
